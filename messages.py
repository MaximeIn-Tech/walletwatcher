######## MENU MESSAGES ###########
async def main_menu_message(username, user_language):
    if user_language == "fr":
        return f"""üöÄ Bienvenue sur Crypto Wallet Monitor {username}, votre alli√© pour surveiller vos cryptos de pr√®s !

Ce bot vous alerte d√®s que le solde de vos portefeuilles change. Restez connect√© √† vos investissements et ne ratez aucune variation importante !

Pr√™t √† √™tre notifi√© √† chaque mouvement ? Ajoutez vos portefeuilles et gardez le contr√¥le total ! üö®
"""
    elif user_language == "es":
        return f"""üöÄ ¬°Bienvenido a Crypto Wallet Monitor {username}, tu aliado para vigilar de cerca tus criptomonedas!

Este bot te alerta cada vez que el saldo de tu carteras cambia. ¬°Mantente conectado a tus inversiones y no te pierdas ninguna fluctuaci√≥n importante!

¬øListo para recibir notificaciones con cada movimiento? ¬°Agrega tus carteras y mant√©n el control total! üö®
        """
    else:
        # Default message for unsupported languages or English
        return f"""üöÄ Welcome to Crypto Wallet Monitor {username}, your ally for keeping a close eye on your cryptos!

This bot alerts you whenever your wallets balance changes. Stay connected to your investments and never miss an important fluctuation!

Ready to be notified with every move? Add your wallets and stay in complete control! üö®
"""


async def help_message(user_language: str):
    if user_language == "fr":
        return """Le bot prend soin de vos demandes et stocke vos donn√©es en toute s√©curit√© dans une base de donn√©es.

Une grande importance est accord√©e √† la protection de votre anonymat. Seul votre Chat_ID est conserv√©, garantissant ainsi que les messages vous parviennent pr√©cis√©ment sans m√©langer les donn√©es des autres utilisateurs.

De plus, le bot n'enregistre pas votre adresse IP, votre nom d'utilisateur ou d'autres d√©tails qui pourraient vous identifier.

Cr√©√© par @TechSherpa.
"""
    elif user_language == "es":
        return """El bot se encarga de tus solicitudes y almacena tus datos de forma segura en una base de datos.

Se otorga gran importancia a la protecci√≥n de tu anonimato. Solo se conserva tu Chat_ID, garantizando que los mensajes te lleguen con precisi√≥n sin mezclar datos de otros usuarios.

Adem√°s, el bot no registra tu direcci√≥n IP, nombre de usuario u otros detalles que puedan identificarte.

Creado por @TechSherpa.
"""
    else:
        return """The bot takes care of your requests and securely stores your data in a database.

Great importance is placed on protecting your anonymity. Only your Chat_ID is retained, ensuring that messages reach you accurately without mixing data from other users.

Furthermore, the bot does not record your IP address, username, or other details that could identify you.

Created by @TechSherpa.
"""


###### OPTIONS MESSAGES #####
async def settings_message(user_language: str):
    if user_language == "fr":
        return "Choisissez l'option que vous voulez modifier:"
    elif user_language == "es":
        return "Por favor, elige la configuraci√≥n que deseas ajustar:"
    else:
        return "Please choose a setting you want to adjust:"


async def language_selection_message(user_language: str):
    if user_language == "fr":
        return "Choisissez une langue:"
    elif user_language == "es":
        return "Por favor, elige el idioma que prefieres:"
    else:
        return "Please choose a language you prefer:"


####### ADD WALLET MESSAGES


async def blockchain_choice_message(user_language: str):
    if user_language == "fr":
        return "Choisissez une blockchain:"
    elif user_language == "es":
        return "Por favor, selecciona una blockchain:"
    else:
        return "Please select a blockchain:"


async def address_choice_message(user_language: str, selected_blockchain: str):
    if user_language == "fr":
        return f"Veuillez entrer une adresse de portefeuille {selected_blockchain} :"
    elif user_language == "es":
        return f"Por favor, ingresa una direcci√≥n de monedero {selected_blockchain}:"
    else:
        return f"Please enter any {selected_blockchain} wallet address:"


async def address_confirmation_message(user_language: str, wallet_address: str):
    if user_language == "fr":
        return f"Votre adresse de portefeuille est {wallet_address}.\nSouhaitez-vous donner un nom √† cette adresse ?"
    elif user_language == "es":
        return f"Tu direcci√≥n de monedero es {wallet_address}.\n¬øTe gustar√≠a darle un nombre a esta direcci√≥n?"
    else:
        return f"Your wallet address is {wallet_address}.\n Would you like to name that address?"


async def wallet_address_error(user_language: str):
    if user_language == "fr":
        return "Veuillez saisir une adresse de portefeuille valide"
    elif user_language == "es":
        return "Por favor, ingresa una direcci√≥n de monedero v√°lida."
    else:
        return "Please enter a valid wallet address."


async def naming_wallet(user_language: str):
    if user_language == "fr":
        return "Veuillez saisir le nom du portefeuille :"
    elif user_language == "es":
        return "Por favor, ingresa el nombre del monedero:"
    else:
        return "Please enter the name of the wallet:"


async def token_symbol_choice(user_language: str):
    if user_language == "fr":
        return "Veuillez choisir un token :"
    elif user_language == "es":
        return "Por favor, selecciona un s√≠mbolo de token:"
    else:
        return "Please select a token symbol:"


async def contract_address_selection(user_language: str):
    if user_language == "fr":
        return "Veuillez saisir l'adresse du contrat :"
    elif user_language == "es":
        return "Por favor, ingresa la direcci√≥n del contrato:"
    else:
        return "Please enter the contract address:"


async def custom_contract_address(user_language: str, contract_address: str):
    if user_language == "fr":
        return f"Adresse du contrat {contract_address} enregistr√©e."
    elif user_language == "es":
        return f"Direcci√≥n del contrato {contract_address} guardada."
    else:
        return f"Contract address {contract_address} saved."


async def contract_address_error(user_language: str):
    if user_language == "fr":
        return "Veuillez saisir une adresse de contrat valide :"
    elif user_language == "es":
        return "Por favor, ingresa una direcci√≥n de contrato v√°lida."
    else:
        return "Please enter a valid contract address."


async def trigger_point_selection(user_language: str):
    if user_language == "fr":
        return "Veuillez entrer le point de d√©clenchement <i>(choisissez 0 si vous voulez voir chaque mise √† jour)</i> :"
    elif user_language == "es":
        return "Por favor, ingresa el punto de activaci√≥n <i>(elige 0 si deseas ver cada actualizaci√≥n)</i>:"
    else:
        return "Please enter the trigger point <i>(choose 0 if you want to see every update)</i>:"


async def trigger_point_saved(user_language: str, trigger_point):
    if user_language == "fr":
        return f"Point de d√©clenchement {trigger_point} enregistr√©."
    elif user_language == "es":
        return f"Punto de activaci√≥n {trigger_point} guardado."
    else:
        return f"Trigger point {trigger_point} saved."


async def trigger_point_error(user_language: str):
    if user_language == "fr":
        return "Veuillez entrer un point de d√©clenchement valide."
    elif user_language == "es":
        return "Por favor, ingresa un punto de activaci√≥n v√°lido."
    else:
        return "Please enter a valid trigger point."


async def stake_message(user_language: str):
    if user_language == "fr":
        return "L'√©tat de vos stakes sont surveill√©s. Vous recevrez un message si ils sont en cours d'unstaking."
    elif user_language == "es":
        return "Los stakes en este monedero est√°n siendo vigilados. Ser√°s notificado si se retira alg√∫n stake."
    else:
        return "Stakes on this wallet are being watched. You'll be notified if a stake is withdrawn."


async def wallets_found_track(user_language: str):
    if user_language == "fr":
        return "S√©lectionnez un portefeuille:"
    elif user_language == "es":
        return "Tus carteras seguidas son (haz clic en una para ver qu√© contrato est√° seguido) :"
    else:
        return "Select a wallet:"


async def wallets_found(user_language: str):
    if user_language == "fr":
        return "Vos portefeuilles suivis sont (cliquez sur l'un d'eux pour voir quels contrats sont suivis) :"
    elif user_language == "es":
        return "Tus carteras seguidas son (haz clic en una para ver qu√© contrato est√° seguido) :"
    else:
        return (
            "Your wallet followed are (click on one to see what contract is followed):"
        )


async def no_wallets_found(user_language: str):
    if user_language == "fr":
        return "Aucun portefeuille n'a √©t√© trouv√©."
    elif user_language == "es":
        return "No se encontraron carteras."
    else:
        return "No wallets have been found."


async def no_contracts_found(user_language: str):
    if user_language == "fr":
        return "Aucun contrat n'a √©t√© trouv√© pour ce portefeuille."
    elif user_language == "es":
        return "No se encontraron contratos para este monedero."
    else:
        return "No contracts have been found for this wallet."


async def contracts_found(user_language, formatted_contracts):
    if user_language == "fr":
        return f"Contrats pour le portefeuille s√©lectionn√© :\n{formatted_contracts}"
    elif user_language == "es":
        return f"Contratos para el monedero seleccionado :\n{formatted_contracts}"
    else:
        return f"Contracts for selected wallet:\n{formatted_contracts}"


async def remove_all_data(user_language):
    if user_language == "fr":
        return f"Voulez-vous vraiment supprimer toutes vos donn√©es ?"
    elif user_language == "es":
        return f"¬øEst√°s seguro/a de que quieres eliminar todos tus datos?"
    else:
        return f"Are you sure you want to delete all your data?"


async def all_data_removed(user_language):
    if user_language == "fr":
        return f"Toutes vos donn√©es ont √©t√© supprim√©es."
    elif user_language == "es":
        return f"Todos sus datos han sido borrados."
    else:
        return f"All of your data has been deleted."


async def tracked_wallet_setup_message(
    wallet_name,
    blockchain,
    wallet_address,
    symbol,
    contract_address,
    trigger_point,
    language,
):
    if language == "fr":
        message = f"Configuration du portefeuille suivi :\n\n"
        message += f"Nom du portefeuille : {wallet_name}\n"
        message += f"Blockchain : {blockchain}\n"
        message += f"Adresse du portefeuille : {wallet_address}\n"
        message += f"Symbole du jeton : {symbol}\n"
        if contract_address is not None:
            message += f"Adresse du contrat : {contract_address}\n"
        message += f"Point de d√©clenchement : {trigger_point}"
    elif language == "es":
        message = f"Configuraci√≥n del monedero rastreado:\n\n"
        message += f"Nombre del monedero: {wallet_name}\n"
        message += f"Blockchain: {blockchain}\n"
        message += f"Direcci√≥n del monedero: {wallet_address}\n"
        message += f"S√≠mbolo del token: {symbol}\n"
        if contract_address is not None:
            message += f"Direcci√≥n del contrato: {contract_address}\n"
        message += f"Punto de activaci√≥n: {trigger_point}"
    else:  # English
        message = f"Tracked wallet setup:\n\n"
        message += f"Wallet Name: {wallet_name}\n"
        message += f"Blockchain: {blockchain}\n"
        message += f"Wallet Address: {wallet_address}\n"
        message += f"Token Symbol: {symbol}\n"
        if contract_address is not None:
            message += f"Contract Address: {contract_address}\n"
        message += f"Trigger Point: {trigger_point}"

    return message
